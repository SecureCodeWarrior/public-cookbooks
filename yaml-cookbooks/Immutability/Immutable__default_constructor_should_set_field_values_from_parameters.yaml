id: aa8ad912-52ab-44c9-8e3d-b2842333f3ca
metadata:
  name: 'Immutable: default constructor should set field values from parameters'
  shortDescription: Avoid default constructor and create a private constructor that
    sets the field values
  level: warning
  scwCategory: ""
  enabled: true
search:
  constructor:
    without:
      child:
        parameter: {}
availableFixes:
- name: amend to private constructor that sets fields with a static factory create
    method
  actions:
  - rewrite:
      to: |-
        private {{{ name }}}({{#sed}}{{#encodeString}}s/(.*),/$1/{{/encodeString}},{{#encodeString}}
        {{#containingClass.fields}}final {{typeElement}} {{name}}, {{/containingClass.fields}}{{/encodeString}}{{/sed}}){
        {{#containingClass.fields}}this.{{name}}={{name}};
                {{/containingClass.fields}}
        }
      target: self
  - addMethod:
      method: |-
        public static final {{{ name }}} create({{#sed}}{{#encodeString}}s/(.*),/$1/{{/encodeString}},{{#encodeString}}
        {{#containingClass.fields}}final {{typeElement}} {{name}}, {{/containingClass.fields}}{{/encodeString}}{{/sed}}){
        return new {{{ name }}}({{#sed}}{{#encodeString}}s/(.*),/$1/{{/encodeString}},{{#encodeString}}{{#containingClass.fields}}{{name}}, {{/containingClass.fields}}{{/encodeString}}{{/sed}});
        }
      position:
        after:
          constructor: {}
      target: parentClass
