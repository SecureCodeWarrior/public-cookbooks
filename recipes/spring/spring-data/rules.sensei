{
  "header": {
    "name": "Custom cookbook",
    "description": "cookbook for internal use within our company",
    "company": "SCW",
    "appsecmail": "appsecteam@senseifinancial.com",
    "rulepack_id": "768d4ceb-2808-4346-8575-70580891b0b3",
    "rulePackVersion": "0.1.0",
    "enabled": true
  },
  "rules": [
    {
      "type": "947034909c9b08d0b583170e594b0eb327933231",
      "model": {
        "yamlCode": "search:\n  methodcall:\n    args:\n      1:\n        containsUntrustedInput: true\n        trustedSources:\n        - methodcall:\n            name: \"format\"\n            type: \"java.lang.String\"\n        type: \"java.lang.String\"\n    name:\n      matches: \"createNativeQuery\"\n    type: \"javax.persistence.EntityManager\"\n",
        "mver": 6,
        "yamlQuickFixCode": "availableFixes:\n- name: \"Use parameterized queries\"\n  actions:\n  - parameterize:\n      placeholderFormat: \"?\"\n      extractUntrustedInput:\n        methodsOnObject:\n          methods:\n          - methodName: \"setParameter\"\n            args:\n              1: \"{{{ index }}}\"\n              2: \"{{{.}}}\"\n          target:\n            returnValue:\n              useMethodChaining: true\n",
        "ruleName": "Injection - SQL Injection in JPA: EntityManager#createNativeQuery",
        "category": "injection:sql",
        "ruleID": "6e367e8f-c966-4f78-92db-53780dae8a76",
        "disableRuleIDs": [],
        "ruleDescriptionFile": "Injection-SQLInjectioninJPAEntityManagercreateNativeQuery.html",
        "ruleShortDescription": "Avoid SQLi by using parameterized queries, instead of string concatenation with untrusted input",
        "ruleErrorLevel": 2,
        "ruleEnabled": true,
        "ruleScope": []
      }
    },
    {
      "type": "947034909c9b08d0b583170e594b0eb327933231",
      "model": {
        "yamlCode": "search:\n  methodcall:\n    args:\n      1:\n        containsUntrustedInput: true\n        trustedSources:\n        - methodcall:\n            name: \"format\"\n            type: \"java.lang.String\"\n        type: \"java.lang.String\"\n    name:\n      matches: \"createQuery\"\n    type: \"javax.persistence.EntityManager\"\n",
        "mver": 6,
        "yamlQuickFixCode": "availableFixes:\n  - name: \"Use parameterized queries\"\n    actions:\n      - parameterize:\n          placeholderFormat: \":{{{name}}}\"\n          extractUntrustedInput:\n            methodsOnObject:\n              methods:\n                - methodName: \"setParameter\"\n                  args:\n                    \"1\": \"\\\"{{{ name }}}\\\"\"\n                    \"2\": \"{{{ . }}}\"\n              target:\n                returnValue:\n                  useMethodChaining: true",
        "ruleName": "Injection - SQL Injection in JPA: EntityManager#createQuery",
        "category": "injection:sql",
        "ruleID": "b1834002-1ae5-4f5c-99ed-bc4346ff892b",
        "disableRuleIDs": [],
        "ruleDescriptionFile": "Injection-SQLInjectioninJPAEntityManagercreateQuery.html",
        "ruleShortDescription": "Avoid SQLi by using parameterized queries, instead of string concatenation with untrusted input",
        "ruleErrorLevel": 2,
        "ruleEnabled": true,
        "ruleScope": []
      }
    }
  ],
  "generators": []
}